plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

mixin {
    add sourceSets.main, 'tabularasa.refmap.json'
    config 'tabularasa.mixins.json'
    debug.export = true
}

group = 'dev.turtywurty.tabularasa'
archivesBaseName = 'tabularasa'


java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2023.07.23-1.20.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        all {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'tabularasa'
            mods {
                tabularasa {
                    source sourceSets.main

                }
            }
        }
        
        client {}
        server {}
        gameTestServer {}

        data {
            workingDirectory project.file('run')
            args '--mod', 'tabularasa', '--all',
                    '--output', file('src/generated/resources/'),
                    '--existing', file('src/main/resources/') 
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.3'
annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

final manifestAttributes = [
        'Specification-Title'   : 'tabularasa',
        'Specification-Vendor'  : 'TurtyWurty',
        'Specification-Version' : '1',
        'Implementation-Title'  : project.name,
        'Implementation-Version': project.jar.archiveVersion,
        'Implementation-Vendor' : 'TurtyWurty'
]
manifestAttributes.put('MixinConfigs', 'tabularasa.mixins.json')

jar {
    manifest.attributes(manifestAttributes)
    finalizedBy('reobfJar')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
